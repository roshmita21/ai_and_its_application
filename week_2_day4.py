# -*- coding: utf-8 -*-
"""Week_2_day4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oQ_qo6OQwCDgtrDBPl9Oyi_sMd36uaeD

# **SUPERVISED LEARNING - REGRESSION**

# HANDS-ON IMPLEMENTATION ON LINEAR REGRESSION(SAMPLE)
"""

# Importing necessary libraries for data analysis, visualization, and linear regression model

import pandas as pd                    # For data manipulation and analysis
import numpy as np                     # For numerical operations
import matplotlib.pyplot as plt        # For data visualization
from sklearn.linear_model import LinearRegression  # For linear regression modeling
from sklearn.model_selection import train_test_split  # For splitting data into train/test sets
from sklearn.metrics import mean_squared_error, r2_score  # For evaluating model performance

# CREATING A SAMPLE DATASET OF STUDY HOURS VS MARKS
hours = np.array([1,2,3,4,5,6,7,8,9]).reshape(-1,1)
marks = np.array([10,20,25,35,45,55,60,80,90])

# data = pd.DataFrame({'hours':hours[0], 'marks':marks})
# data.head()

# Scatter Plot
plt.scatter(hours, marks, color='blue')
plt.xlabel('Study Hours')
plt.ylabel('Marks')
plt.title('Study Hours vs Marks (Linear Regression)')
plt.legend()
plt.grid(True)
plt.show()

# SPLITTING DATA INTO TRAIN-TEST
X_train, X_test, y_train, y_test = train_test_split(hours, marks, test_size=0.2, random_state=42 )

print("Traning Set Size : ", len(X_train))
print("Testing Set Size : ", len(X_test))

# DEFINING MODEL AND TRANING WITH DATA
model = LinearRegression()
model.fit(X_train, y_train)

# VISUALIZING WITH A REGRESSION LINE

predicted_marks = model.predict(hours)  # Predicting marks using the model
plt.scatter(hours, marks, color='blue', label="Actual Marks")  # Actual data points
plt.plot(hours, predicted_marks, color='red', label="Regression Line")  # Regression line
plt.xlabel("Study Hours")   # X-axis label
plt.ylabel("Marks")         # Y-axis label
plt.title("Linear Regression Fit for Hours vs Marks")  # Title
plt.legend()                # Show legend
plt.show()                  # Display the plot